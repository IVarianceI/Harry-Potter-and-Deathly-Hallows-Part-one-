#Social Network cluste Version
library(igraph)
setwd("C:/Users/wz/Desktop/R")
library(readxl)
H7social <- read_excel("H7social.xlsx")
View(H7social)
data<-read_excel("H7social.xlsx")
y <- data.frame(H7social$Speaker1,H7social$Speaker2)
net<- graph.data.frame(y,directed = F)
v(net)$label <- V(net)$name
V(net)$label<-V(net)$name
V(net)$degree <- degree(net)
V(net)$label.size <-(degree(net)+10)/max(degree(net))*1.5
set.seed(1212)
net2 <-simplify(net,remove.multiple = TRUE, remove.loops = TRUE)
cnet <- cluster_edge_betweenness(net)
plot(cnet,net2,layout.fruchterman.reingold(net,niter=500),vertex.size=5,vertex.color = rainbow(20))
save.image("C:/Users/wz/Desktop/R/H7 cluster.RData")

#Social Network For Evil side

library(igraph)
setwd("C:/Users/wz/Desktop/R")
library(readxl)
Bad_guy <- read_excel("Bad guy.xlsx")
View(Bad_guy)
data<- read_excel("Bad guy.xlsx")
y <- data.frame(Bad_guy$Actor1,Bad_guy$Actor2)
net<- graph.data.frame(y,directed = TRUE)
v(net)$label <- V(net)$name
V(net)$label<-V(net)$name
V(net)$degree <- degree(net)
simplify(net,remove.multiple = TRUE, remove.loops = TRUE)
plot(net,vertex.color = rainbow(20), edge,arrows.size=0.1,layout = layout.fruchterman.reingold(net, niter=500))

# Good Side of People Use Betweeness
library(igraph)
setwd("C:/Users/wz/Desktop/R")
library(readxl)
library(readxl)
Good_guy <- read_excel("Good guy.xlsx")
View(Good_guy)
y <- data.frame(Good_guy$`Actor 1`,Good_guy$`Actor 2`)
net<- graph.data.frame(y,directed = F)
Discussion_Betweeness <- betweenness(net)
Discussion_Betweeness <- as.data.frame(Discussion_Betweeness)
set.seed(2222)
View(Discussion_Betweeness)
net2 <-simplify(net,remove.multiple = TRUE, remove.loops = TRUE)
V(net2)$size= betweenness(net)/100
plot(net2, edge.arrow.size=0.25)

#Eigencentrality for good guys 
library(igraph)
setwd("C:/Users/wz/Desktop/R")
library(readxl)
library(readxl)
Good_guy <- read_excel("Good guy.xlsx")
View(Good_guy)
y <- data.frame(Good_guy$`Actor 1`,Good_guy$`Actor 2`)
net<- graph.data.frame(y,directed = F)
net2 <-simplify(net,remove.multiple = TRUE, remove.loops = TRUE)
eigen_centrality(net2)
Discussion_Eigencentrality <- eigen_centrality(net2)
Discussion_Eigencentrality <- as.data.frame(Discussion_Eigencentrality)
V(net2)$size=eigen_centrality(net)/2
plot(net2)

#Hubs and authorities 
hs <- hub_score(net)$vector
as <- authority.score(net)$vector
par(mfrow=c(1,2))
Set.seed(123)
plot(net,vertex.size=hs*30,main ='Hubs',vertex.color=rainbow(20),edge.arrow.size=0.1, layout= layout.kamada.kawai)
plot(net,vertex.size=as*30,main ='authority',vertex.color=rainbow(20),edge.arrow.size=0.1, layout= layout.kamada.kawai)
